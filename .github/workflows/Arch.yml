# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build on Arch Linux

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Dependencies
      run: pacman -Syu --noconfirm base-devel cmake ninja libpipewire taglib libsndfile qt6-base clang

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Compile
      run: ninja -C ${{github.workspace}}/build
      
    - name: Archive the artifacts
      uses: actions/upload-artifact@v3
      with:
          name: customplayer
          path: ${{github.workspace}}/build/customplayer
